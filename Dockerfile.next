# Stage 1: Base with build dependencies

ARG RUBY_VERSION=2.7.6
FROM docker.io/library/ruby:$RUBY_VERSION-slim AS base

RUN echo 'cache bust 1'

WORKDIR /gala

# Install build dependencies
RUN apt-get update -qq \
    && apt-get install -y --no-install-recommends \
    curl postgresql-client  \
    libjemalloc2 sqlite3 git \
    pkg-config libpq-dev imagemagick shared-mime-info \
    libxrender1 libxext6 libfontconfig1 libx11-6 \
    && rm -rf /var/lib/apt/lists /var/cache/apt/archives

ARG RAILS_ENV=production
ENV RAILS_ENV=${RAILS_ENV}
ARG version=unknown
ENV VERSION=${version}

ENV BUNDLE_DEPLOYMENT="1" \
    BUNDLE_PATH="/usr/local/bundle"

FROM base AS build

# Install packages needed to build gems
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y build-essential git pkg-config python && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Install Node.js and Yarn
RUN mkdir /usr/local/nvm
ENV NVM_DIR /usr/local/nvm
ENV NODE_VERSION 12.5.0
RUN curl https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash \
    && . $NVM_DIR/nvm.sh \
    && nvm install $NODE_VERSION \
    && nvm alias default $NODE_VERSION \
    && nvm use default
ENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH
RUN npm install -g yarn

COPY package.json yarn.lock ./
RUN yarn install --check-files

# Install gems and node modules
COPY .ruby-version ./
RUN echo "gem: --no-rdoc --no-ri" > /etc/gemrc
RUN gem update --system 3.3.22
RUN gem install bundler:2.4.19
# RUN bundle config set --local without 'development test'
COPY Gemfile Gemfile.lock ./
RUN bundle install --jobs 4 --retry 2 \
  && rm -rf ~/.bundle/ "${BUNDLE_PATH}"/ruby/*/cache "${BUNDLE_PATH}"/ruby/*/bundler/gems/*/.git \
  && bundle exec bootsnap precompile --gemfile

# Copy application code and precompile assets
COPY . .

# Precompile bootsnap code for faster boot times
RUN bundle exec bootsnap precompile app/

RUN if [ "$RAILS_ENV" != "development" ]; then \
    SECRET_KEY_BASE=dummy \
    DATABASE_URL=postgresql://does/not/matter \
    bundle exec rake assets:precompile; \
    fi

# Final stage for app image
FROM base

# Copy built artifacts: gems, application
COPY --from=build "${BUNDLE_PATH}" "${BUNDLE_PATH}"
COPY --from=build /gala /gala

ENTRYPOINT ["./entrypoint.sh"]
EXPOSE 3000
CMD ["bundle", "exec", "rails", "s", "-b", "0.0.0.0"]
