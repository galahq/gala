# syntax = docker/dockerfile:1

FROM heroku/heroku:22 as builder

WORKDIR /gala

# environment variables
ENV BUNDLE_DEPLOYMENT="true" \
    BUNDLE_PATH="/usr/local/bundle" \
    RAILS_LOG_TO_STDOUT="true" \
    RAILS_SERVE_STATIC_FILES="true" \
    RUBY_VERSION="3.1.6" \
    NODE_VERSION="12.5.0" \
    RBENV_ROOT="/root/.rbenv" \
    NODENV_ROOT="/root/.nodenv" \
    PATH="/root/.rbenv/bin:/root/.rbenv/shims:/root/.nodenv/bin:/root/.nodenv/shims:$PATH"

# install builder dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget gnupg2 build-essential curl python3 \
    libvips git pkg-config libpq-dev libjemalloc-dev lsb-release zlib1g-dev \
    && echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list \
    && curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
    && apt-get update && apt-get install -y postgresql-client-16 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives

# install rbenv and ruby-build
RUN git clone https://github.com/rbenv/rbenv.git $RBENV_ROOT \
    && cd $RBENV_ROOT && src/configure && make -C src \
    && mkdir -p "$(rbenv root)"/plugins \
    && git clone https://github.com/rbenv/ruby-build.git "$(rbenv root)"/plugins/ruby-build \
    && rbenv install $RUBY_VERSION \
    && rbenv global $RUBY_VERSION \
    && rbenv rehash \
    && gem update --system 3.3.22 \
    && gem install bundler:2.4.19

# install nodenv and node-build
RUN git clone https://github.com/nodenv/nodenv.git $NODENV_ROOT \
    && cd $NODENV_ROOT && src/configure && make -C src \
    && mkdir -p $NODENV_ROOT/plugins \
    && git clone https://github.com/nodenv/node-build.git $NODENV_ROOT/plugins/node-build \
    && export PATH="$NODENV_ROOT/bin:$PATH" \
    && eval "$(nodenv init -)" \
    && nodenv install $NODE_VERSION \
    && nodenv global $NODE_VERSION \
    && nodenv rehash \
    && npm install -g yarn

# update PATH for yarn
ENV PATH=/root/.nodenv/versions/12.5.0/bin/:$PATH

# copy ruby and node configuration files
COPY .ruby-version Gemfile Gemfile.lock package.json yarn.lock ./

# install gems
RUN echo "gem: --no-document" > /etc/gemrc \
    && bundle install --jobs $(nproc) --retry 2

# install JavaScript dependencies
RUN yarn install --check-files

# copy the rest of the application code
COPY . ./

# set environment variables for Rails
ARG rails_env=development
ENV RAILS_ENV=${rails_env}
ARG secret_key_base=placeholder
ENV SECRET_KEY_BASE=${secret_key_base}

# precompile the app directory if not in development
RUN if [ "$RAILS_ENV" != "development" ]; then \
    bundle exec bootsnap precompile app/; \
    DATABASE_URL=postgresql://placeholder/placeholder \
    SECRET_KEY_BASE_DUMMY=1 \
    bundle exec rails assets:precompile; \
    fi

# expose port and set entrypoint
EXPOSE 3000
RUN chmod +x entrypoint.sh
ENTRYPOINT ["./entrypoint.sh"]
CMD ["bundle", "exec", "rails", "s", "-b", "0.0.0.0", "-p", "3000"]
